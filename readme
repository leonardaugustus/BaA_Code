autmatische auswertung

manuelle auswertung

vorschritt: pdf einladen und dann die pdf vergleichen und dann bestätigen.

schritt zwei eine zusammenfassung vond ausgeschlossen

provisorischer vorbefund (als titel):
Bestätigt zwei und drei und DeprecationWarning

nacher 
Ausgeschlossene Antigene und wraum auf grund von welcher spalte



schritt 3  reihenfolge von index ganz am anfang


bei schritt 4 mit zwei Reporting mit zwei Register Medizinischer Report, der andere Labortechnischer Report:

zusammenfassung datum uhrzeit, userauswahl lot nummer, antikörper hat der patient, erste table mit reaktionen
eine für das labor wie viel reaktione was, was hat der user .



ausgangslage alle t



datenbanken: überlegen



Hoch und tiefstellen: lea: lea muss hochgestellt werden auch die anderen müssen hoch oder tiefgestellt werden wenn es nötig ist von Antikörper D bis Xga




einzelner code für jede analyse:






schauen ob noch papyisiertes


bachelorarbeit schreiben

bugs and probelms for version 2.0
######################################################
You are a senior Python / Dash developer.  
I already have a 3-step “Antigen-Analyse Dashboard” (~2 000 LoC).  
Please refactor / extend it with the features below.  
Keep code modular, readable, and PEP-8 compliant.

────────────────────────────────────────────
🌟  HIGH-LEVEL GOALS
────────────────────────────────────────────
0. **Schritt 0**: PDF-Import & Vergleich **plus DB-Auswahl**
1. **Automatische Auswertung** (default)  
2. **Manuelle Auswertung** (toggle-able)  
3. Re-order some columns, add Lot-Nr., improve reports, superscript antigen symbols  
4. **Step-picker navigation**: user can click directly on steps 0-4

────────────────────────────────────────────
🪜  DETAILED USER FLOW & REQUIREMENTS
────────────────────────────────────────────
**STEP 0 – „PDF einladen & vergleichen / Datenbank öffnen“**  
• Left pane: *PDF upload* → parse with `tabula-py` or `camelot`.  
• Right pane: *DB-Auswahl* dropdown listing previous analyses (id + datum + spendernummer).  
• Two-column diff-view (*PDF-Data* vs *Current Table*).  
• Buttons: **Bestätigen** (replace table) · **Öffnen aus DB** (loads selected record).
 in this step it also would be nice if you could change the + or the 0 on your own somehow...

**STEP 1 – LISS-Werte auswählen** (unchanged).

**STEP 2 – Analyse prüfen** (enhanced):  
• **Zusammenfassung der ausgeschlossenen Antigene** under legend.  
• **Provisorischer Vorbefund** heading =  
  `Bestätigt (2× + und 3× +)` + any `DeprecationWarning`.  
• For every excluded antigen show “Ausgeschlossen wegen Spalte ‹XYZ›”.

**STEP 3 – Finalisierte Tabelle**  
• **Index** column first, then *Spendernummer*.  
• Lot-Nummer (captured in Step 0 or manual entry) appears in header.

**STEP 4 – Reporting**  
Two tabs:

1. **Medizinischer Report**  
   `Datum · Uhrzeit · Benutzer · Lot-Nr.` header  
   List antibodies present (patient level)  
   First table = antigen reactions

2. **Labortechnischer Report**  
   Count reactions per antigen, highlight user vs system choice

PDF export via `reportlab` or `weasyprint`.

────────────────────────────────────────────
📐  UI / DESIGN
────────────────────────────────────────────
• Replace inline CSS with `assets/styles.css`; keep only placeholders in `app.index_string`.  
• Progress bar becomes a **clickable step-picker (0-4)**:<br>
  clicking a circle jumps to that step (if data prerequisites met).  
• German labels:<br>
  “Automatische Auswertung / Manuelle Auswertung”,<br>
  “PDF vergleichen & bestätigen”, “Öffnen aus DB”.

────────────────────────────────────────────
💾  PERSISTENCE LAYER (Full analysis archive)
────────────────────────────────────────────
SQLite + SQLAlchemy (Postgres-ready):

```sql
donors (
  spendernummer TEXT PRIMARY KEY,
  name          TEXT,
  notes         TEXT
);

analyses (
  id              INTEGER PRIMARY KEY,
  spendernummer   TEXT REFERENCES donors(spendernummer),
  timestamp       DATETIME,
  lot_number      TEXT,
  liss_json       TEXT,   -- raw table after Step 1
  status_json     TEXT,   -- status_map + exclusion info
  user_sel_json   TEXT,   -- user selections
  report_pdf      BLOB
);


######################################################################################
#########################################################################################

problems and bugs of the current version 3.0:
################################################

You are a senior Python / Dash developer.  
Please deliver **Version 3.0** of the “Antigen-Analyse Dashboard”.  
Start from the current v2.0 codebase and fix / add the items below.  
Code must remain modular, readable, and PEP-8 compliant.

────────────────────────────────────────────
🐞  GENERAL BUG-FIXES
────────────────────────────────────────────
1. **Lot-Nummer**
   • Must be persisted in `analyses.lot_number`.  
   • Show it in both report tabs and embed in the exported PDF header.

2. **Database sanity**
   • Add unit test `tests/test_db_basic.py` that:  
     – inserts dummy donor + analysis,  
     – queries back,  
     – asserts equality.  
   • If `create_all()` already ran, run migrations safely (no data loss).

3. **File upload**
   • Accept **PDF or JPEG** (`application/pdf`, `image/jpeg`) only.  
   • Auto-detect table by matching *column headers* (letters & labels always identical).  
   • Ignore cell content when matching.  
   • If parser confidence < 0.95, show editable preview so user can fix “+”/“0”.

4. **Step navigation picker**
   • User may click any circle (0–4) to jump *forwards OR backwards*.  
   • Disable circles if prerequisite data missing (tooltip: “Bitte zuerst Schritt X abschließen”).

5. **Letter formatting**
   • Implement `format_antigen()` so that   `Lea → Leᵃ`, `JsB → Jsᴮ`, etc.  
   • Apply throughout Steps 2–4 and in both PDFs.

────────────────────────────────────────────
🪜  STEP-SPECIFIC CHANGES
────────────────────────────────────────────
**STEP 0 – Import & Vergleich**  
• After parsing, render a **side-by-side diff editor**:  
  left = parsed table (read-only), right = editable copy.  
• User can click a cell in right pane to toggle between “+”, “0”, “nt”.  
• Add “Spender wählen” dropdown; prefill with spendernummer from PDF/CSV.

**STEP 1 – LISS-Werte auswählen**  
• Rename column header `spendernummer` → `Sp.Nr.` (shorter).  
• Rename `index` → `Idx`.  
• Prevent the `Sp.Nr.` column from being editable or sortable.

**STEP 2 – Analyse prüfen**  
• Buttons **“Alle auswählen / Alle abwählen / Standard-Auswahl”** must work.  
  – Standard = all non-excluded antigens.  
• **Provisorischer Vorbefund**:  
  – List *separately* “Bestätigt (3× +)” and “Bestätigt (2× +)”.  
• Checkbox row must align exactly with table columns (no right-shift).  
  – Use CSS `display:grid; grid-template-columns:` mirroring DataTable widths.  
• Remove `Sp.Nr.` from the toggle list entirely (never selectable).

**STEP 3 – Finalisierte Tabelle**  
• Verify `Idx` is first column, `Sp.Nr.` is second.  
• `Sp.Nr.` must NOT appear in the “Ausgewählte Antigene” list.

**STEP 4 – Reporting**  
• Embed Lot-Nummer in both report tabs and PDF.  
• Add tiny “Go to Step 2” link inside each report tab for quick jump-back.

────────────────────────────────────────────
📐  UI / DESIGN
────────────────────────────────────────────
• Keep responsive CSS in `assets/styles.css`.  
• Button labels stay German.  
• Provide screenshot after alignment fix (include in PR description).

────────────────────────────────────────────
💾  PERSISTENCE LAYER
────────────────────────────────────────────
Unchanged schema, but ensure:
```sql
analyses.lot_number TEXT  -- persisted & non-null after Step 0











